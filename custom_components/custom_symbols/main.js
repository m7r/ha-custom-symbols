const DOMAIN="custom_symbols",ICON_STORE={},CONFIG={"-":"order",":":"color","#":"mode","%":"breakPoint",v:{prefix:"monochrome",fade:.6},h:{prefix:"hierarchical",secondary:"opacity: 0.5",tertiary:"opacity: 0.2",fade:.7},p:{prefix:"hierarchical",primary:"fill: var(--cs-primary, currentColor)",secondary:"fill: var(--cs-secondary, var(--primary-color, #03a9f4))",tertiary:"fill: var(--cs-tertiary, var(--accent-color, #ff9800))",fade:.6},m:{prefix:"multicolor",primary:"fill: var(--cs-primary, currentColor)",secondary:"fill: var(--cs-base, var(--primary-text-color, #000)); opacity: 0.5",tertiary:"fill: var(--cs-base, var(--primary-text-color, #000)); opacity: 0.2",useFill:!0,fade:.6}},compareOrder=(t,e)=>t.order>e.order,getColor=t=>t.color,getPath=t=>t.path,group=(t,e)=>t.reduce(((t,r,o,a)=>{const c=String(e(r,o,a));return c in t?t[c].push(r):t[c]=[r],t}),Object.create(null)),mergeParts=t=>{return Object.values((e=getColor,t.reduce(((t,r,o,a)=>{const c=String(e(r,o,a));return c in t?t[c].push(r):t[c]=[r],t}),Object.create(null))));var e},combinePaths=t=>t.map((t=>t.getAttribute("d"))).join(" "),isMonochrome=t=>String(t.classList).includes(CONFIG.v.prefix),getOption=(t,e)=>t.split(/([-:#%])/).reduce(((t,e,r,o)=>{const a=CONFIG[e],c=o[r+1];return a&&(t[a]=c),t}),e),extractMode=t=>e=>Array.from(e.classList).filter((e=>e.startsWith(t.prefix))).map((t=>getOption(t,{path:e}))),makeDynamic=t=>e=>{if(t<=e.breakPoint){const t="clear"==e.mode,r={...e,color:e.color+"Fade",fade:t-2};return t?[e,r]:r}return e},createStyle=(t,e)=>{const r=t[t.length-1];let o="";if(r.color){const t=r.color.replace("Fade","");o+=e[t]||e.useFill&&`fill: var(--cs-${t}, ${r.path.getAttribute("fill")})`}return r.fade&&(o+=`; opacity: ${Math.abs(1+r.fade+e.fade)}`),o},preProcessIcon=async(t,e)=>{const[r,o=""]=e.split("#"),[a,c]=o.split(/(\d+)/),i=void 0!==c,n=CONFIG[a[0]]||i&&CONFIG.v;let s,l="",p=null;const m=await fetch(`/${DOMAIN}/icon/${t}/${r}.svg`),u=await m.text(),d=(new DOMParser).parseFromString(u,"image/svg+xml");if(!d||"svg"!=d.documentElement.nodeName)return{};const h=d.documentElement,f=Array.from(h.querySelectorAll("path"));if(s=h.getAttribute("viewBox"),n){let t=f.flatMap(extractMode(n)).sort(compareOrder);i&&(t=t.flatMap(makeDynamic(c)));const e=t.length;1!=e||n!=CONFIG.v&&n!=CONFIG.h||(l=t[0].path.getAttribute("d")),e&&!l&&(p=mergeParts(t).map((t=>{const e=document.createElementNS("http://www.w3.org/2000/svg","path"),r=createStyle(t,n);return r&&e.setAttribute("style",r),e.setAttribute("d",combinePaths(t.map(getPath))),e})))}return l||p||(l=combinePaths(f.filter(isMonochrome))),{path:l,viewBox:s,nodes:p}},getIcon=async(t,e)=>{const r=`${t}:${e}`;return ICON_STORE[r]||(ICON_STORE[r]=preProcessIcon(t,e)),ICON_STORE[r]},getIconList=async t=>{const e=await fetch(`/${DOMAIN}/list/${t}`),r=await e.text();return JSON.parse(r)};"customIcons"in window||(window.customIcons={}),window.customIcons.cs={getIcon:t=>getIcon("cs",t),getIconList:()=>getIconList("cs")},customElements.whenDefined("ha-icon").then((()=>{customElements.get("ha-icon").prototype._setCustomPath=async function(t,e){const r=await t;if(e===this.icon&&(this._path=r.path,this._viewBox=r.viewBox,r.nodes)){await this.UpdateComplete;const t=this.shadowRoot.querySelector("ha-svg-icon");if(!t)return;await t.updateComplete;const e=t.shadowRoot.querySelector("g");if(!e)return;e.innerText="",r.nodes.forEach((t=>e.appendChild(t.cloneNode(!0))))}}}));